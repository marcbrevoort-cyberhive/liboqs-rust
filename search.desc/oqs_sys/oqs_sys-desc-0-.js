searchState.loadedDescShard("oqs_sys", 0, "Bindings to liboqs\nCPU runtime detection flags\nChecks if the CPU supports a given extension\nUsed to indicate that some undefined error occurred.\nUsed to indicate failures in external libraries (e.g., …\nInternal implementation of C11 aligned_alloc to work …\nFree memory allocated with OQS_MEM_aligned_alloc.\nZeros out <code>len</code> bytes of memory starting at <code>ptr</code>.\nFrees <code>ptr</code>.\nConstant time comparison of byte sequences <code>a</code> and <code>b</code> of …\nZeros out <code>len</code> bytes of memory starting at <code>ptr</code>, then frees …\nRepresents return values from functions.\nUsed to indicate successful return from function.\nThis function frees prefetched OpenSSL objects\nThis currently sets the values in the OQS_CPU_EXTENSIONS …\nReturn library version string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKey encapsulation mechanism object\nReturns the number of key encapsulation mechanisms in …\nReturns identifiers for available key encapsulation …\nIndicates whether the specified algorithm was enabled at …\nDecapsulation algorithm.\nEncapsulation algorithm.\nFrees an OQS_KEM object that was constructed by …\nKeypair generation algorithm.\nConstructs an OQS_KEM object for a particular algorithm.\nPrintable string representing the version of the …\nThe NIST security level (1, 2, 3, 4, 5) claimed in this …\nDecapsulation algorithm.\nEncapsulation algorithm.\nReturns the argument unchanged.\nWhether the KEM offers IND-CCA security (TRUE) or IND-CPA …\nCalls <code>U::from(self)</code>.\nKeypair generation algorithm.\nThe (maximum) length, in bytes, of ciphertexts for this …\nThe (maximum) length, in bytes, of public keys for this …\nThe (maximum) length, in bytes, of secret keys for this …\nThe (maximum) length, in bytes, of shared secrets for this …\nPrintable string representing the name of the key …\nSwitches OQS_randombytes to use the given function.\nInitializes the NIST DRBG with a given seed and with …\nSwitches OQS_randombytes to use the specified algorithm.\nSignature schemes object\nReturns the number of signature mechanisms in liboqs.  …\nReturns identifiers for available signature schemes in …\nIndicates whether the specified algorithm was enabled at …\nFrees an OQS_SIG object that was constructed by …\nKeypair generation algorithm.\nConstructs an OQS_SIG object for a particular algorithm.\nSignature generation algorithm.\nSignature verification algorithm.\nPrintable string representing the version of the …\nThe NIST security level (1, 2, 3, 4, 5) claimed in this …\nWhether the signature offers EUF-CMA security (TRUE) or …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nKeypair generation algorithm.\nThe (maximum) length, in bytes, of public keys for this …\nThe (maximum) length, in bytes, of secret keys for this …\nThe (maximum) length, in bytes, of signatures for this …\nPrintable string representing the name of the signature …\nSignature generation algorithm.\nSignature verification algorithm.")